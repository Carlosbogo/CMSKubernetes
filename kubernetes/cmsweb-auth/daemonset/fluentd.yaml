apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd
  namespace: auth
data:
  fluentdDeamon.conf: |-
    # do not collect fluentd logs to avoid infinite loops.
    <match kubernetes.var.log.containers.fluentd**>
      @type null
    </match>

    <match kubernetes.var.log.containers.**_kube-system_**>
        @type null
    </match>

    # read from container logs
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag kubernetes.*
      read_from_head true
      <parse>
        @type json
        #time_format %Y-%m-%dT%H:%M:%S.%NZ
      </parse>
    </source>

    # add some basic metadata to the records
    #<filter kubernetes.**>
    #  @type kubernetes_metadata
    #  @id filter_kube_metadata
    #</filter>

    # add basic parsing to all logs
    # we take record "as is", see raw ${record}
    #with kubernetes tag (e.g. kubernetes.var.log.container*)
    <filter kubernetes.**>
      @type parser
      key_name log
      format json
    </filter>

    # send to http endpoint
    <match kubernetes.**>
      @type http
      endpoint_url    "http://monit-logs.cern.ch:10012/"
      serializer      json
      http_method     post
    </match>


  install-plugins.sh: |-
    #!/bin/sh
    fluent-gem install fluent-plugin-out-http
    exec /run.sh
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd
  namespace: auth
  labels:
    k8s-app: fluentd-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
  updateStrategy:
    # when updating, restart all pods
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
        kubernetes.io/cluster-service: "true"
      annotations:
        # update on configmap change
        checksum/config-map: "/fluentd-config.yaml"
    spec:
      serviceAccount: fluentd
      serviceAccountName: fluentd
      securityContext:
        seLinuxOptions:
          type: "spc_t"
      containers:
      - name: fluentd
        image: gitlab-registry.cern.ch/cloud/atomic-system-containers/fluentd-elasticsearch:v2.4.0
        command: ["/bin/sh", "-c", "/etc/fluent/config.d/install-plugins.sh"]
        env:
          - name: FLUENTD_ARGS
            value: --no-supervisor
          - name: OUTPUT_PRODUCER
            value: "cmsweb"
          - name: OUTPUT_ENDPOINT
            value: http://monit-logs.cern.ch:10012/
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: etcfluentd
          mountPath: /etc/fluent/config.d/
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: etcfluentd
        configMap:
          name: fluentd
          defaultMode: 0777
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: auth
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: auth
