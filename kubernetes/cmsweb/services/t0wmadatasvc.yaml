---
apiVersion: v1
kind: ConfigMap
metadata:
  name: t0wmadatasvc-filebeat-config
  namespace: tzero
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/srv/logs/t0wmadatasvc/*${MY_POD_NAME}*.log
      ignore_older: 1h
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: '%{[message]} - Podname=${MY_POD_NAME}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: Service
apiVersion: v1
metadata:
  name: t0wmadatasvc
  namespace: tzero
spec:
  selector:
    app: t0wmadatasvc
  ports:
    - port: 8308
      targetPort: 8308
      name: t0wmadatasvc
    - port: 18308
      targetPort: 18308
      name: t0wmadsvc-mon
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: t0wmadatasvc
  labels:
    app: t0wmadatasvc
  namespace: tzero
data:
  setup-certs-and-run.sh: |
    #!/bin/bash
    
    sudo cp /host/etc/grid-security/* /etc/grid-security
    echo 'INFO Files in /etc/grid-security'
    ls -lahZ /etc/grid-security
    #su  -c "cd /data && /data/run.sh" --preserve-environment _t0wmadatasvc
    cd /data && /data/run.sh
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: t0wmadatasvc
  name: t0wmadatasvc
  namespace: tzero
spec:
  selector:
    matchLabels:
      app: t0wmadatasvc
  replicas: 1 #PROD# 5
  template:
    metadata:
      labels:
        app: t0wmadatasvc
        env: k8s #k8s#
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "18308"
    spec:
      # use hostNetwork to allow communication between reqmgr/t0wmadatasvc/workqueue and couch
#       hostNetwork: true
#       dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: 1000
        #runAsGroup: 0
      shareProcessNamespace: true
      containers:
      - image: cmssw/t0wmadatasvc #imagetag
        name: t0wmadatasvc
        resources:
          requests:
            memory: "256Mi"
            cpu: "50m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - cmsweb-ping
            - "--url=http://localhost:8308/t0wmadatasvc/replayone/hello"
            - "--authz=/etc/hmac/hmac"
            - -verbose
            - "0"
          initialDelaySeconds: 120
          periodSeconds: 10
        ports:
        - containerPort: 8308
          protocol: TCP
          name: t0wmadatasvc
        - containerPort: 18308
          protocol: TCP
          name: t0wmadsvc-mon
        command:
        - /bin/bash
        - /opt/setup-certs-and-run/setup-certs-and-run.sh
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - mountPath: /host/etc/grid-security
          name: etc-grid-security
          readOnly: true
        - name: setup-certs-and-run
          mountPath: /opt/setup-certs-and-run
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/t0wmadatasvc
        securityContext:
          privileged: true
#PROD#- name: t0wmadatasvc-filebeat
#PROD#  image: docker.elastic.co/beats/filebeat:7.12.0
#PROD#  args: [
#PROD#    "-c", "/etc/filebeat.yml",
#PROD#    "-e",
#PROD#  ]
#PROD#  env:
#PROD#  - name: MY_POD_NAME
#PROD#    valueFrom:
#PROD#      fieldRef:
#PROD#        apiVersion: v1
#PROD#        fieldPath: metadata.name
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  volumeMounts:
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/t0wmadatasvc
#PROD#  - name: config
#PROD#    mountPath: /etc/filebeat.yml
#PROD#    readOnly: true
#PROD#    subPath: filebeat.yml
#PROD#  - name: data
#PROD#    mountPath: /usr/share/filebeat/data
#PROD#  - name: varlog
#PROD#    mountPath: /var/log
#PROD#  - name: varlibdockercontainers
#PROD#    mountPath: /var/lib/docker/containers
#PROD#    readOnly: true
      - image: cmssw/exporters:20210726-nonstatic
        name: t0wmadatasvc-exporter
        imagePullPolicy: Always
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
        command: ["/bin/bash","-c"]
        args: ["echo \"Starting exporter\" ; sleep 120s ; pid=`ps axjfwww | grep \"wmc-httpd.*t0wmadatasvc\" | grep -v grep | grep -v process_monitor | grep -v \" 1 \" | awk '{print $1}'` && process_exporter -pid $pid -prefix t0reqmon_exporter -address \":18308\""]
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: t0wmadatasvc-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: etc-grid-security
        hostPath:
          path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: t0wmadatasvc
#PROD#- name: logs
#PROD#  persistentVolumeClaim:
#PROD#      claimName: logs-cephfs-claim-tzero
#PROD#- name: varlog
#PROD#  hostPath:
#PROD#    path: /var/log
#PROD#- name: varlibdockercontainers
#PROD#  hostPath:
#PROD#    path: /var/lib/docker/containers
#PROD#- name: config
#PROD#  configMap:
#PROD#    defaultMode: 0640
#PROD#    name: t0wmadatasvc-filebeat-config
#PROD#- name: data
#PROD#  emptyDir: {}
