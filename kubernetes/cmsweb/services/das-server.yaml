---
apiVersion: v1
kind: ConfigMap
metadata:
  name: das-server-filebeat-config
  namespace: das
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/logs/das.log*${MY_POD_NAME}*
      ignore_older: 1h
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: '%{[message]} - Podname=${MY_POD_NAME}}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: Service
apiVersion: v1
metadata:
  name: das-server
  namespace: das
spec:
  selector:
    app: das-server
  ports:
    - port: 8217
      targetPort: 8217
      name: das
    - port: 18217
      targetPort: 18217
      name: das-mon
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: das-server-promtail
  labels:
    app: das-server-promtail
  namespace: das
data:
  promtail-config.yaml: |
    server:
      http_listen_port: 9080
      grpc_listen_port: 0

    positions:
      filename: /tmp/positions.yaml

    clients:
      - url: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push

    scrape_configs:
    - job_name: das-server
      static_configs:
      - targets:
          - das-logs
        labels:
          job: das-logs
          __path__: /data/logs/das.log*
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: das-server
  name: das-server
  namespace: das
spec:
  selector:
    matchLabels:
      app: das-server
  replicas: 1 #PROD# 3
  template:
    metadata:
      labels:
        app: das-server
        env: k8s #k8s#
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "18217"
    spec:
      containers:
      - image: registry.cern.ch/cmsweb/das-server #imagetag
        name: das-server
        imagePullPolicy: Always
        env:
        - name: X509_USER_PROXY
          value: /etc/proxy/proxy
        resources:
          requests:
            memory: "100Mi"
            cpu: "200m"
          limits:
            memory: "3Gi"
            cpu: "4000m"
        livenessProbe:
          httpGet:
            path: /das
            port: 8217
          initialDelaySeconds: 120
          periodSeconds: 10
        ports:
        - containerPort: 8217
          protocol: TCP
          name: das
        - containerPort: 18217
          protocol: TCP
          name: das-mon
        args:
        - /data/das2go
        - -config
        - /etc/secrets/dasconfig.json
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
#PROD#  - name: logs
#PROD#    mountPath: /data/logs
      - image: registry.cern.ch/cmsweb/exporters:20210628-static
        name: das-server-exporter
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
        args:
        - /data/das2go_exporter
        - -address
        - ":18217"
#PROD#  - name: logs
#PROD#    mountPath: /data/logs
#PROD#- image: registry.cern.ch/cmsweb/promtail
#PROD#  name: promtail
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  args:
#PROD#  - /data/promtail
#PROD#  - -config.file
#PROD#  - /etc/secrets/promtail-config.yaml
#PROD#  volumeMounts:
#PROD#  - name: promtail-secrets
#PROD#    mountPath: /etc/secrets
#PROD#  - name: logs
#PROD#    mountPath: /data/logs
#PROD#- name: das-server-filebeat
#PROD#  image: docker.elastic.co/beats/filebeat:7.12.0
#PROD#  args: [
#PROD#    "-c", "/etc/filebeat.yml",
#PROD#    "-e",
#PROD#  ]
#PROD#  env:
#PROD#  - name: MY_POD_NAME
#PROD#    valueFrom:
#PROD#      fieldRef:
#PROD#        apiVersion: v1
#PROD#        fieldPath: metadata.name
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  volumeMounts:
#PROD#  - name: logs
#PROD#    mountPath: /data/logs
#PROD#  - name: config
#PROD#    mountPath: /etc/filebeat.yml
#PROD#    readOnly: true
#PROD#    subPath: filebeat.yml
#PROD#  - name: data
#PROD#    mountPath: /usr/share/filebeat/data
#PROD#  - name: varlog
#PROD#    mountPath: /var/log
#PROD#  - name: varlibdockercontainers
#PROD#    mountPath: /var/lib/docker/containers
#PROD#    readOnly: true
#PROD#  securityContext:
#PROD#    allowPrivilegeEscalation: false
      initContainers:
      - name: checkcouchdb
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup das-mongo.das; do echo "Waiting for das-mongo"; sleep 10; done;']
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: das-server-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
#PROD#- name: logs
#PROD#  persistentVolumeClaim:
#PROD#    claimName: logs-cephfs-claim-das
#PROD#- name: promtail-secrets
#PROD#  configMap:
#PROD#    name: das-server-promtail
#PROD#- name: varlog
#PROD#  hostPath:
#PROD#    path: /var/log
#PROD#- name: varlibdockercontainers
#PROD#  hostPath:
#PROD#    path: /var/lib/docker/containers
#PROD#- name: config
#PROD#  configMap:
#PROD#    defaultMode: 0640
#PROD#    name: das-server-filebeat-config
#PROD#- name: data
#PROD#  emptyDir: {}
