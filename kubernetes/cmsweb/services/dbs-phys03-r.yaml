---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dbs-phys03-r-filebeat-config
  namespace: dbs
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/srv/logs/dbs/*${MY_POD_NAME}*.log
      ignore_older: 1h
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: '%{[message]} - Podname=${MY_POD_NAME}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: Service
apiVersion: v1
metadata:
  name: dbs-phys03-r
  namespace: dbs
spec:
  selector:
    app: dbs-phys03-r
  ports:
    - port: 8254
      targetPort: 8254
      name: dbs-phys03-r
    - port: 18254
      targetPort: 18254
      name: dbs-pr-mon
    - port: 19254
      targetPort: 19254
      name: dbs-pr-cpy-mon
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dbs-phys03-r
  labels:
    app: dbs-phys03-r
  namespace: dbs
data:
  setup-certs-and-run.sh: |
    #!/bin/bash

    sudo cp /host/etc/grid-security/* /etc/grid-security
    echo 'INFO Files in /etc/grid-security'
    ls -lahZ /etc/grid-security
    #su  -c "cd /data && /data/run.sh" --preserve-environment _dbs
    cd /data && /data/run.sh
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: dbs-phys03-r
  name: dbs-phys03-r
  namespace: dbs
spec:
  selector:
    matchLabels:
      app: dbs-phys03-r
  replicas: 1 #PROD# 5
  template:
    metadata:
      labels:
        app: dbs-phys03-r
        env: k8s #k8s#
        job: dbs-phys03-r
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "18254"
#         prometheus.io/port: "19254"
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
      containers:
      - image: registry.cern.ch/cmsweb/dbs #imagetag
        name: dbs-phys03-r
        resources:
          requests:
            memory: "500Mi"
            cpu: "300m"
          limits:
            memory: "10Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
            - cmsweb-ping
            - "--url=http://localhost:8254/dbs/prod/phys03/DBSReader/"
            - "--authz=/etc/hmac/hmac"
            - -verbose
            - "0"
          initialDelaySeconds: 120
          periodSeconds: 10
        ports:
        - containerPort: 8254
          protocol: TCP
          name: dbs-phys03-r
        - containerPort: 18254
          protocol: TCP
          name: dbs-pr-mon
        - containerPort: 19254
          protocol: TCP
          name: dbs-pr-cpy-mon
        command:
        - /bin/bash
        - /opt/setup-certs-and-run/setup-certs-and-run.sh
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - mountPath: /host/etc/grid-security
          name: etc-grid-security
          readOnly: true
        - name: setup-certs-and-run
          mountPath: /opt/setup-certs-and-run
        - name: token-secrets
          mountPath: /etc/token
          readOnly: true          
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/dbs
        securityContext:
          privileged: true
#PROD#- name: dbs-phys03-r-filebeat
#PROD#  image: docker.elastic.co/beats/filebeat:7.12.0
#PROD#  args: [
#PROD#    "-c", "/etc/filebeat.yml",
#PROD#    "-e",
#PROD#  ]
#PROD#  env:
#PROD#  - name: MY_POD_NAME
#PROD#    valueFrom:
#PROD#      fieldRef:
#PROD#        apiVersion: v1
#PROD#        fieldPath: metadata.name
#PROD#  resources:
#PROD#    requests:
#PROD#      memory: "50Mi"
#PROD#      cpu: "50m"
#PROD#  volumeMounts:
#PROD#  - name: logs
#PROD#    mountPath: /data/srv/logs/dbs
#PROD#  - name: config
#PROD#    mountPath: /etc/filebeat.yml
#PROD#    readOnly: true
#PROD#    subPath: filebeat.yml
#PROD#  - name: data
#PROD#    mountPath: /usr/share/filebeat/data
#PROD#  - name: varlog
#PROD#    mountPath: /var/log
#PROD#  - name: varlibdockercontainers
#PROD#    mountPath: /var/lib/docker/containers
#PROD#    readOnly: true
#PROD#  securityContext:
#PROD#    allowPrivilegeEscalation: false
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: dbs-phys03-r-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: etc-grid-security
        hostPath:
            path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: dbs-phys03-r
      - name: token-secrets
        secret:
          secretName: token-secrets          
#PROD#- name: logs
#PROD#  persistentVolumeClaim:
#PROD#      claimName: logs-cephfs-claim-dbs
#PROD#- name: varlog
#PROD#  hostPath:
#PROD#    path: /var/log
#PROD#- name: varlibdockercontainers
#PROD#  hostPath:
#PROD#    path: /var/lib/docker/containers
#PROD#- name: config
#PROD#  configMap:
#PROD#    defaultMode: 0640
#PROD#    name: dbs-phys03-r-filebeat-config
#PROD#- name: data
#PROD#  emptyDir: {}
