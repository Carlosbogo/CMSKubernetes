---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ms-output-filebeat-config
  namespace: dmwm
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: log
      enabled: true
      paths:
        - /data/srv/logs/reqmgr2ms/*.log
      scan_frequency: 10s
      backoff: 5s
      max_backoff: 10s
    output.console:
      codec.format:
        string: 'Podname=${MY_POD_NAME} - %{[message]} - logfile=%{[log.file.path]}'
        pretty: false
    queue.mem:
      events: 65536
    logging.metrics.enabled: false
---
kind: Service
apiVersion: v1
metadata:
  name: ms-output
  namespace: dmwm
spec:
  selector:
    app: ms-output
  ports:
    - port: 8245
      targetPort: 8245
      name: ms-output
    - port: 18245
      targetPort: 18245
      name: ms-output-mon
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ms-output
  labels:
    app: ms-output
  namespace: dmwm
data:
  setup-certs-and-run.sh: |
    #!/bin/bash
    cp /host/etc/grid-security/* /etc/grid-security
    echo 'INFO Files in /etc/grid-security'
    ls -lahZ /etc/grid-security
    su  -c "cd /data && /data/run.sh" --preserve-environment _reqmgr2ms
---    
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: ms-output
  name: ms-output
  namespace: dmwm
spec:
  selector:
    matchLabels:
      app: ms-output
  replicas: 1
  template:
    metadata:
      labels:
        app: ms-output
        env: k8s #k8s#
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: "18245"
    spec:
      # use hostNetwork to allow communication between reqmgr2ms/reqmon/workqueue and couch
#       hostNetwork: true
#       dnsPolicy: ClusterFirstWithHostNet
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
      - image: registry.cern.ch/cmsweb/reqmgr2ms #imagetag
        name: ms-output
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - sudo chmod 0777 /data/srv/logs/reqmgr2ms; sudo chown _reqmgr2ms:_reqmgr2ms /data/srv/logs/reqmgr2ms
        livenessProbe:
          exec:
            command:
            - cmsweb-ping
            - "--url=http://localhost:8245/ms-output/data/status"
            - "--authz=/etc/hmac/hmac"
            - -verbose
            - "0"
          initialDelaySeconds: 120
          periodSeconds: 10
        resources:
          requests:
            memory: "256Mi"
            cpu: "300m"
          limits:
            memory: "3Gi"
            cpu: "1000m"
        ports:
        - containerPort: 8245
          protocol: TCP
          name: ms-output
        - containerPort: 18245
          protocol: TCP
          name: ms-output-mon
        command:
        - /bin/bash
        - /opt/setup-certs-and-run/setup-certs-and-run.sh
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - mountPath: /host/etc/grid-security
          name: etc-grid-security
          readOnly: true
        - name: setup-certs-and-run
          mountPath: /opt/setup-certs-and-run
        - name: logs
          mountPath: /data/srv/logs/reqmgr2ms
      - name: ms-output-filebeat
        image: docker.elastic.co/beats/filebeat:7.12.0
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        resources:
          requests:
            memory: "50Mi"
            cpu: "50m"
        volumeMounts:
        - name: logs
          mountPath: /data/srv/logs/reqmgr2ms
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        securityContext:
          privileged: true
      initContainers:
      - name: checkmongodb
        image: busybox:1.28
        command: ['sh', '-c', 'until nslookup ms-output-mongo.dmwm; do echo "Waiting for ms-output-mongo"; sleep 10; done;']
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: reqmgr2ms-output-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: etc-grid-security
        hostPath:
            path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: ms-output
      - name: logs
        emptyDir: {}
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: ms-output-filebeat-config
      - name: data
        emptyDir: {}

