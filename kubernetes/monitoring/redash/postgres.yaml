apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: postgres
  name: postgres
  namespace: redash
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: postgres
    spec:
      containers:
      - env:
        - name: PYTHONUNBUFFERED
          value: "0"
        - name: REDASH_LOG_LEVEL
          value: INFO
        - name: REDASH_REDIS_URL
          value: redis://redis.redash:6379/0
        - name: REDASH_WEB_WORKERS
          value: "4"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redash-secret
              key: POSTGRES_PASSWORD
        - name: REDASH_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: redash-secret
              key: REDASH_COOKIE_SECRET
        - name: REDASH_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: redash-secret
              key: REDASH_DATABASE_URL
        - name: REDASH_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: redash-secret
              key: REDASH_SECRET_KEY
        image: postgres:9.6-alpine
        imagePullPolicy: ""
        name: postgres
        resources: {}
        volumeMounts:
        #- mountPath: /var/lib/postgresql/data
        - mountPath: /tmp/data
          name: postgres-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: postgres-claim0
        persistentVolumeClaim:
          claimName: postgres-claim0
status: {}
