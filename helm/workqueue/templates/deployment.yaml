{{- $environment := .Values.environment | default dict }}
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: workqueue
  name: {{ .Release.Name }} 
  namespace: dmwm
spec:
  selector:
    matchLabels:
      app: workqueue
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: workqueue
        env: k8s-{{.Values.environment}}
      annotations:
      {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        name: workqueue
        {{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}
        resources:
        {{- toYaml .Values.resources | nindent 12 }}
        {{- end }}
        livenessProbe:
        {{- toYaml .Values.livenessProbe | nindent 12 }}
        ports:
        - containerPort: 8240
          protocol: TCP
        command:
        - /bin/bash
        - /opt/setup-certs-and-run/setup-certs-and-run.sh
        volumeMounts:
        - name: proxy-secrets
          mountPath: /etc/proxy
          readOnly: true
        - name: secrets
          mountPath: /etc/secrets
          readOnly: true
        - name: robot-secrets
          mountPath: /etc/robots
          readOnly: true
        - name: hmac-secrets
          mountPath: /etc/hmac
          readOnly: true
        - mountPath: /host/etc/grid-security
          name: etc-grid-security
          readOnly: true
        - name: setup-certs-and-run
          mountPath: /opt/setup-certs-and-run
        - name: token-secrets
          mountPath: /etc/token
          readOnly: true
        {{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}   
        - name: logs
          mountPath: /data/srv/logs/workqueue
        {{- end }}
        securityContext:
          privileged: true
        {{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}
      - name: workqueue-filebeat
        image: {{ .Values.imageFilebeat.path}}
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        {{- toYaml .Values.imageFilebeat.env | nindent 10 }}
        resources:
        {{- toYaml .Values.imageFilebeatResources | nindent 12 }}
        volumeMounts:
        - name: logs
          mountPath: /data/srv/logs/workqueue
        - name: config
          mountPath: /etc/filebeat.yml
          readOnly: true
          subPath: filebeat.yml
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
        {{- end }}
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: workqueue-secrets
      - name: robot-secrets
        secret:
          secretName: robot-secrets
      - name: hmac-secrets
        secret:
          secretName: hmac-secrets
      - name: etc-grid-security
        hostPath:
            path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: workqueue
      - name: token-secrets
        secret:
          secretName: token-secrets
      {{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }} 
      - name: logs
        persistentVolumeClaim:
        {{- if eq (toString $environment) "preprod" }}
          claimName: logs-cephfs-claim-preprod-dmwm
          {{- end }}
          {{- if eq (toString $environment) "prod" }}
          claimName: logs-cephfs-claim-prod-dmwm
        {{- end }}
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: workqueue-filebeat-config
      - name: data
        emptyDir: {}
      {{- end }}
