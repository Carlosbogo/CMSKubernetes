{{- $environment := .Values.environment | default dict }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "wmarchive.fullname" . }}
  labels:
    app: wmarchive          
spec:
  {{- if not .Values.autoscaling.enabled }}
  {{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}
  replicas: {{ .Values.replicaCount.prod }}
  {{- else }}
  replicas: {{ .Values.replicaCount.test }}
  {{- end }}
  {{- end }}
  selector:
    matchLabels:
      app: wmarchive            
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: wmarchive
        env: k8s-{{.Values.environment}}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "wmarchive.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          {{- toYaml .Values.image.args | nindent 10 }}
          livenessProbe:
          {{- toYaml .Values.livenessProbe | nindent 12 }}
          ports:
           - containerPort: 8200
             protocol: TCP
             name: wma
           - containerPort: 18200
             protocol: TCP
             name: wma-mon                  
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: proxy-secrets
            mountPath: /etc/proxy
            readOnly: true
          - name: secrets
            mountPath: /etc/secrets
            readOnly: true
          - mountPath: /host/etc/grid-security
            name: etc-grid-security
            readOnly: true
          - name: setup-certs-and-run
            mountPath: /opt/setup-certs-and-run
          - name: token-secrets
            mountPath: /etc/token
            readOnly: true              
{{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}
          - name: logs
            mountPath: /data/srv/logs/wmarchive
{{- end }}
          securityContext:
          {{- toYaml .Values.imageFilebeatSecurityContext | nindent 12 }}
{{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}
        - name: {{ .Values.imageFilebeat.name }}
          image: {{ .Values.imageFilebeat.path }}
          args: [
            "-c", "/etc/filebeat.yml",
            "-e",
          ]
          env:
          {{- toYaml .Values.imageFilebeat.env | nindent 10 }}
          resources:
          {{- toYaml .Values.imageFilebeatResources | nindent 12 }}
          volumeMounts:
          - name: logs
            mountPath: /data/srv/logs/wmarchive
          - name: config
            mountPath: /etc/filebeat.yml
            readOnly: true
            subPath: filebeat.yml
          - name: data
            mountPath: /usr/share/filebeat/data
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
          securityContext:
          {{- toYaml .Values.imageFilebeatSecurityContext | nindent 12 }}
{{- end }}
      volumes:
      - name: proxy-secrets
        secret:
          secretName: proxy-secrets
      - name: secrets
        secret:
          secretName: wmarchive-secrets
      - name: etc-grid-security
        hostPath:
            path: /etc/grid-security
      - name: setup-certs-and-run
        configMap:
          name: wmarchive
      - name: token-secrets
        secret:
          secretName: token-secrets          
{{- if or (eq (toString $environment) "prod") (eq (toString $environment) "preprod") }}
      - name: logs
        persistentVolumeClaim:
{{- if eq (toString $environment) "preprod" }}
            claimName: logs-cephfs-claim-preprod-wma
{{- end }}
{{- if eq (toString $environment) "prod" }}
            claimName: logs-cephfs-claim-prod-wma
{{- end }}
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        configMap:
          defaultMode: 0640
          name: wmarchive-filebeat-config
      - name: data
        emptyDir: {}
{{- end }}
