# Default values for dbs2go-phys03-w.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 
   prod: 3
   test: 1

image:
  repository: registry.cern.ch/cmsweb/dbs2go
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "HG2108h-v3"
  command:
  - /data/run.sh

environment:
  prod: false
  preprod: false
  test : false

env:
- name: X509_USER_PROXY
  value: /etc/proxy/proxy
- name: TNS_ADMIN
  value: /etc/tnsnames.ora

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  prometheus.io/scrape: 'true'
  prometheus.io/port: "9255"
  prometheus.io/path: "/dbs/prod/phys03/DBSWriter/metrics"

securityContext: 
  allowPrivilegeEscalation: false

podSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 2000

imageFilebeatSecurityContext:
  allowPrivilegeEscalation: false

livenessProbe:
  httpGet:
    path: /dbs/prod/phys03/DBSWriter/healthz
    port: 9255
  httpHeaders:
  - name: Accept
    value: application/json
  initialDelaySeconds: 120
  periodSeconds: 10

livenessProbePreProd:
  httpGet:
    path: /dbs/prod/phys03/DBSWriter/healthz
    port: 9255
  httpHeaders:
  - name: Accept
    value: application/json
  initialDelaySeconds: 120
  periodSeconds: 10

service: 
  port: 9255
  name: dbs2go-phys03-w
  protocol: TCP
  type: ClusterIP

imageFilebeat:
  name: dbs2go-phys03-w-filebeat
  path: docker.elastic.co/beats/filebeat:7.12.0
  args: [
  "-c", "/etc/filebeat.yml",
  "-e",
  ]
  env:
  - name: MY_POD_NAME
    valueFrom:
      fieldRef:
        apiVersion: v1
        fieldPath: metadata.name

imageFilebeatResources:
  requests:
    memory: "50Mi"
    cpu: "50m"

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  requests:
    memory: "100Mi"
    cpu: "200m"
  limits:
    memory: "8000Mi"
    cpu: "8000m"


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
